{
	"info": {
		"_postman_id": "4154e243-e933-492c-85de-54e6144c7701",
		"name": "Test EWM-feature-location",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20883671"
	},
	"item": [
		{
			"name": "Добавление новой локации - москва",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = {};\r",
							"let name = 'name' + pm.collectionVariables.get(\"usersCount\");\r",
							"pm.collectionVariables.set('name', name)\r",
							"pm.collectionVariables.set(\"usersCount\", pm.collectionVariables.get(\"usersCount\") + 1)\r",
							"body = {\r",
							"    name: name\r",
							"};\r",
							"pm.collectionVariables.set('request_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"catid\", pm.response.json().id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"lat\": \"55.755829\",\r\n  \"lon\": \"37.617627\",\r\n  \"name\": \"Moscow\",\r\n  \"description\": \"city\",\r\n  \"radius\": 15\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/location",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"location"
					]
				},
				"description": "Обратите внимание: имя категории должно быть уникальным"
			},
			"response": [
				{
					"name": "Категория добавлена",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}"
				},
				{
					"name": "Запрос составлен с ошибкой",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Не выполнены условия для совершения операции",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Объект не найден",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
				},
				{
					"name": "Запрос приводит к нарушению целостности данных",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
				},
				{
					"name": "Внутренняя ошибка сервера",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
				}
			]
		},
		{
			"name": "Добавление новой локации - Большой",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = {};\r",
							"let name = 'name' + pm.collectionVariables.get(\"usersCount\");\r",
							"pm.collectionVariables.set('name', name)\r",
							"pm.collectionVariables.set(\"usersCount\", pm.collectionVariables.get(\"usersCount\") + 1)\r",
							"body = {\r",
							"    name: name\r",
							"};\r",
							"pm.collectionVariables.set('request_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"catid\", pm.response.json().id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"lat\": \"55.760221\",\r\n  \"lon\": \"37.618561\",\r\n  \"name\": \"Bolshoi Theatre\",\r\n  \"description\": \"theatre\",\r\n  \"radius\": 0.05\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/location",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"location"
					]
				},
				"description": "Обратите внимание: имя категории должно быть уникальным"
			},
			"response": [
				{
					"name": "Категория добавлена",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}"
				},
				{
					"name": "Запрос составлен с ошибкой",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Не выполнены условия для совершения операции",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Объект не найден",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
				},
				{
					"name": "Запрос приводит к нарушению целостности данных",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
				},
				{
					"name": "Внутренняя ошибка сервера",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
				}
			]
		},
		{
			"name": "Добавление новой локации - гум",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = {};\r",
							"let name = 'name' + pm.collectionVariables.get(\"usersCount\");\r",
							"pm.collectionVariables.set('name', name)\r",
							"pm.collectionVariables.set(\"usersCount\", pm.collectionVariables.get(\"usersCount\") + 1)\r",
							"body = {\r",
							"    name: name\r",
							"};\r",
							"pm.collectionVariables.set('request_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"catid\", pm.response.json().id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"lat\": \"55.754749\",\r\n  \"lon\": \"37.621539\",\r\n  \"name\": \"GUM\",\r\n  \"description\": \"shopping mall\",\r\n  \"radius\": 0.1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/location",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"location"
					]
				},
				"description": "Обратите внимание: имя категории должно быть уникальным"
			},
			"response": [
				{
					"name": "Категория добавлена",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}"
				},
				{
					"name": "Запрос составлен с ошибкой",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Не выполнены условия для совершения операции",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Объект не найден",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
				},
				{
					"name": "Запрос приводит к нарушению целостности данных",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
				},
				{
					"name": "Внутренняя ошибка сервера",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
				}
			]
		},
		{
			"name": "Добавление новой локации - мариинский",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = {};\r",
							"let name = 'name' + pm.collectionVariables.get(\"usersCount\");\r",
							"pm.collectionVariables.set('name', name)\r",
							"pm.collectionVariables.set(\"usersCount\", pm.collectionVariables.get(\"usersCount\") + 1)\r",
							"body = {\r",
							"    name: name\r",
							"};\r",
							"pm.collectionVariables.set('request_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"catid\", pm.response.json().id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"lat\": \"59.925426\",\r\n  \"lon\": \"30.295863\",\r\n  \"name\": \"Mariinsky Theatre\",\r\n  \"description\": \"theatre\",\r\n  \"radius\": 0.05\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/location",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"location"
					]
				},
				"description": "Обратите внимание: имя категории должно быть уникальным"
			},
			"response": [
				{
					"name": "Категория добавлена",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}"
				},
				{
					"name": "Запрос составлен с ошибкой",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Не выполнены условия для совершения операции",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Объект не найден",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
				},
				{
					"name": "Запрос приводит к нарушению целостности данных",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
				},
				{
					"name": "Внутренняя ошибка сервера",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
				}
			]
		},
		{
			"name": "Получение локации по id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = {};\r",
							"let name = 'name' + pm.collectionVariables.get(\"usersCount\");\r",
							"pm.collectionVariables.set('name', name)\r",
							"pm.collectionVariables.set(\"usersCount\", pm.collectionVariables.get(\"usersCount\") + 1)\r",
							"body = {\r",
							"    name: name\r",
							"};\r",
							"pm.collectionVariables.set('request_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"catid\", pm.response.json().id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/location/:locId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"location",
						":locId"
					],
					"variable": [
						{
							"key": "locId",
							"value": "1"
						}
					]
				},
				"description": "Обратите внимание: имя категории должно быть уникальным"
			},
			"response": [
				{
					"name": "Категория добавлена",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}"
				},
				{
					"name": "Запрос составлен с ошибкой",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Не выполнены условия для совершения операции",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Объект не найден",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
				},
				{
					"name": "Запрос приводит к нарушению целостности данных",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
				},
				{
					"name": "Внутренняя ошибка сервера",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
				}
			]
		},
		{
			"name": "Поиск локаций",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = {};\r",
							"let name = 'name' + pm.collectionVariables.get(\"usersCount\");\r",
							"pm.collectionVariables.set('name', name)\r",
							"pm.collectionVariables.set(\"usersCount\", pm.collectionVariables.get(\"usersCount\") + 1)\r",
							"body = {\r",
							"    name: name\r",
							"};\r",
							"pm.collectionVariables.set('request_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"catid\", pm.response.json().id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/location/?lat=55.7555&lon=37.6202&distance=10&description=theatre",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"location",
						""
					],
					"query": [
						{
							"key": "lat",
							"value": "55.7555"
						},
						{
							"key": "lon",
							"value": "37.6202"
						},
						{
							"key": "distance",
							"value": "10"
						},
						{
							"key": "name",
							"value": "",
							"disabled": true
						},
						{
							"key": "description",
							"value": "theatre"
						},
						{
							"key": "size",
							"value": "10",
							"disabled": true
						},
						{
							"key": "from",
							"value": "0",
							"disabled": true
						}
					]
				},
				"description": "Обратите внимание: имя категории должно быть уникальным"
			},
			"response": [
				{
					"name": "Категория добавлена",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}"
				},
				{
					"name": "Запрос составлен с ошибкой",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Не выполнены условия для совершения операции",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Объект не найден",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
				},
				{
					"name": "Запрос приводит к нарушению целостности данных",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
				},
				{
					"name": "Внутренняя ошибка сервера",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
				}
			]
		},
		{
			"name": "Поиск событий по локации",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = {};\r",
							"let name = 'name' + pm.collectionVariables.get(\"usersCount\");\r",
							"pm.collectionVariables.set('name', name)\r",
							"pm.collectionVariables.set(\"usersCount\", pm.collectionVariables.get(\"usersCount\") + 1)\r",
							"body = {\r",
							"    name: name\r",
							"};\r",
							"pm.collectionVariables.set('request_body', JSON.stringify(body));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"catid\", pm.response.json().id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/loc?lat=10&lon=580.555&distance=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"loc"
					],
					"query": [
						{
							"key": "lat",
							"value": "10"
						},
						{
							"key": "lon",
							"value": "580.555"
						},
						{
							"key": "distance",
							"value": "10"
						}
					]
				},
				"description": "Обратите внимание: имя категории должно быть уникальным"
			},
			"response": [
				{
					"name": "Категория добавлена",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}"
				},
				{
					"name": "Запрос составлен с ошибкой",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Не выполнены условия для совершения операции",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"Only pending or canceled events can be changed\",\n  \"reason\": \"For the requested operation the conditions are not met.\",\n  \"status\": \"400 BAD_REQUEST\",\n  \"timestamp\": \"yyyy-MM-dd HH:mm:ss\"\n}"
				},
				{
					"name": "Объект не найден",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"NOT_FOUND\",\n  \"reason\": \"The required object was not found.\",\n  \"message\": \"Event with id=21 was not found.\",\n  \"timestamp\": \"2022-09-07 09:10:50\"\n}"
				},
				{
					"name": "Запрос приводит к нарушению целостности данных",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"CONFLICT\",\n  \"reason\": \"Integrity constraint has been violated\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:47:58\"\n}"
				},
				{
					"name": "Внутренняя ошибка сервера",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Концерты\",\n  \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"INTERNAL_SERVER_ERROR\",\n  \"reason\": \"Error occurred\",\n  \"message\": \"could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement\",\n  \"timestamp\": \"2022-09-07 10:23:27\"\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "usersCount",
			"value": ""
		},
		{
			"key": "request_body",
			"value": ""
		},
		{
			"key": "catid",
			"value": ""
		}
	]
}